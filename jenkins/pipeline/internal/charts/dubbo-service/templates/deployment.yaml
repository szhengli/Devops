apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ .Values.name }}
  namespace: {{ .Values.namespace }}
spec:
  selector:
    matchLabels:
      app: {{ .Values.name  }}  
  replicas: {{ .Values.replics }}   
  strategy:
    rollingUpdate:
      maxSurge: 25%
      maxUnavailable: 0
    type: RollingUpdate
  template:
    metadata:
      labels:
        version: v1
        app: {{ .Values.name }}
        service: {{ regexSplit "-" .Values.name -1|first }}
        {{- if  has  .Values.name .Values.zone.front }} 
        zone: front
        {{- else if  has  .Values.name .Values.zone.back }}
        zone: back
        {{- else if  has  .Values.name .Values.zone.infra }}
        zone: infra
        {{- end  }}
    spec:
      terminationGracePeriodSeconds: 10
      {{- if .Values.name | regexMatch "basic|api|entry|jobms-admin|fpapiv5|jobmsv5-admin" }}
      hostNetwork: false
      {{- else }}
      hostNetwork: true
      dnsPolicy: ClusterFirstWithHostNet
      {{- end }}
      hostAliases:
      - ip: "192.168.3.90"
        hostnames:
        - "w1"
      - ip: "192.168.3.102"
        hostnames:
        - "w2"
      - ip: "192.168.3.95"
        hostnames:
        - "w3"
      - ip: "192.168.3.131"
        hostnames:
        - "w4"
      - ip: "192.168.3.132"
        hostnames:
        - "w5"
      - ip: "192.168.3.133"
        hostnames:
        - "w6"
      - ip: "192.168.3.134"
        hostnames:
        - "w7"
      - ip: "192.168.3.96"
        hostnames:
        - "w8"
      - ip: "192.168.3.139"
        hostnames:
        - "w9"
      - ip: "192.168.3.140"
        hostnames:
        - "w10"
      - ip: "192.168.3.135"
        hostnames:
        - "w11"
      - ip: "192.168.3.136"
        hostnames:
        - "w12"
      - ip: "192.168.3.137"
        hostnames:
        - "w13"
      containers:
      - name: {{ .Values.name }}
        image: {{ .Values.imagename }}
        volumeMounts:
        - mountPath: /data/app-logs
          name: app-logs
        {{- if .Values.name | regexMatch "jobms-web|jobmsv5-web" }}
        ports:
        - name: jobms-9999
          hostPort: 9999
          containerPort: 9999
        - name: jobms-8081
          hostPort: 8081
          containerPort: 8081
        - name: jobms-8080
          hostPort: 8080
          containerPort: 8080
        {{- end }}
        env:
        - name: aliyun_logs_test-zllog
          value: /data/app-logs/*.hm.log.*
        - name: aliyun_logs_test-zllog_project
          value: test-app-logs-datas-zl
        - name: aliyun_logs_test-zllog_logstore
          value: zllog
        - name: aliyun_logs_test-zllog_machinegroup
          value: test-hm-group
        resources:
          requests:
            cpu: "200m"
            memory: "500Mi"
          limits:
            cpu: "2"
            memory: "1Gi"
        readinessProbe:
          exec:
            command: ["readiness.sh"]
          initialDelaySeconds: 1
          periodSeconds: 10
          timeoutSeconds: 3
          failureThreshold: 3
        livenessProbe:
          exec:
            command: ["liveness.sh"]
          initialDelaySeconds: 1
          periodSeconds: 10
          failureThreshold: 3
          timeoutSeconds: 3
        startupProbe:
          exec:
            command: ["startup.sh"]
          initialDelaySeconds: 20
          periodSeconds: 3
          failureThreshold: 100
#      - name: filebeat
#        image: elastic/filebeat:7.4.2
#        resources:
#          requests:
#            memory: "100Mi"
#            cpu: "10m"
#          limits:
#            cpu: "200m"
#            memory: "300Mi"
#        imagePullPolicy: IfNotPresent
#        env:
#        - name: podIp
#          valueFrom:
#            fieldRef:
#              apiVersion: v1
#              fieldPath: status.podIP
#        - name: podName
#          value: {{ .Values.name }}
#        - name: podNamespace
#          valueFrom:
#            fieldRef:
#              apiVersion: v1
#              fieldPath: metadata.namespace
#        - name: podDeployName
#          value: {{ .Values.name }}-deployment
#        - name: TZ
#          value: "Asia/Shanghai"
#        securityContext:
#          runAsUser: 0
#        volumeMounts:
#          - name: app-logs
#            mountPath: /data/app-logs
#          - name: filebeatconf
#            mountPath: /usr/share/filebeat/filebeat.yml 
#            subPath: usr/share/filebeat/filebeat.yml
#      - name: filebeat-kafka
#        image: elastic/filebeat:7.4.2
#        resources:
#          requests:
#            memory: "100Mi"
#            cpu: "10m"
#          limits:
#            cpu: "200m"
#            memory: "300Mi"
#        imagePullPolicy: IfNotPresent
#        env:
#        - name: podIp
#          valueFrom:
#            fieldRef:
#              apiVersion: v1
#              fieldPath: status.podIP
#        - name: podName
#          value: {{ .Values.name }}
#        - name: podNamespace
#          valueFrom:
#            fieldRef:
#              apiVersion: v1
#              fieldPath: metadata.namespace
#        - name: podDeployName
#          value: {{ .Values.name }}-deployment
#        - name: TZ
#          value: "Asia/Shanghai"
#        securityContext:
#          runAsUser: 0
#        volumeMounts:
#          - name: app-logs
#            mountPath: /data/app-logs
#          - name: filebeat-kafka
#            mountPath: /usr/share/filebeat/filebeat.yml 
#            subPath: usr/share/filebeat/filebeat.yml
      volumes:
        #persistentVolumeClaim:
        #  claimName: {{ .Values.namespace }}-tmplogs
      - name: app-logs
        emptyDir: {}
#      - name: filebeat-kafka
#        configMap:
#          name: filebeat-kafka
#          items:
#          - key: filebeat-kafka.yml
#            path: usr/share/filebeat/filebeat.yml
#      - name: filebeatconf
#        configMap:
#          name: filebeatconf
#          items:
#          - key: filebeat.yml
#            path: usr/share/filebeat/filebeat.yml
#
