import jenkins.model.Jenkins
import hudson.security.PermissionGroup
import hudson.security.Permission
import com.michelin.cio.hudson.plugins.rolestrategy.RoleBasedAuthorizationStrategy
import com.michelin.cio.hudson.plugins.rolestrategy.Role
import com.synopsys.arc.jenkins.plugins.rolestrategy.RoleType
import org.jenkinsci.plugins.rolestrategy.permissions.PermissionHelper
Jenkins jk = Jenkins.getInstance()
def rbas = jk.getAuthorizationStrategy() 

def roleMaps = rbas.getRoleMaps()

globalRoleMaps = roleMaps["globalRoles"]

defaultGlobalRole = globalRoleMaps.getRole("default")
globalRoleMaps.assignRole(defaultGlobalRole, "samsun")



projecRoleMaps = roleMaps["projectRoles"]
devrole = projecRoleMaps.getRole("env-dev")
projecRoleMaps.assignRole(devrole, 'samsun')

jk.setAuthorizationStrategy(rbas)

jk.save()





