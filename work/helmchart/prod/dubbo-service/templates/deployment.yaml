apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ .Values.name }}
  namespace: {{ .Values.namespace }}
  labels:
    app: {{ .Values.name }}
    version: {{ .Values.version | quote }}
spec:
  selector:
    matchLabels:
      app: {{ .Values.name  }}  
  replicas: {{ .Values.replics }}
  {{- if  .Values.namespace | regexMatch "prod|prodv5"  }} 
  strategy:
    rollingUpdate:
      maxSurge: 60%
      maxUnavailable: 0
    type: RollingUpdate
  {{- else }}
  strategy:
    rollingUpdate:
      maxSurge: 50%
      maxUnavailable: 50%
    type: RollingUpdate
  {{- end }}
  template:
    metadata:
      labels:
        app: {{ .Values.name }}
        version: {{ .Values.version | quote }}
        {{- if  .Values.namespace | regexMatch "prodv5"  }} 
        {{- if has .Values.name .Values.front }}
        zone: front
        {{- else if has .Values.name .Values.middle }}
        zone: middle
        {{- else }}
        zone: base
        {{- end }}
        {{- end }}
    spec:
      {{- if has .Values.name .Values.middle }}
      priorityClassName: high-priority-nonpreempting
      {{- end }}
      terminationGracePeriodSeconds: 300
      {{- if  .Values.name | regexMatch "dwms|dwmsv5"  }}
         {{- if  .Values.namespace | regexMatch "prod|prodv5"  }}
            {{- include "dwms.hosts.prod" .  | indent 6 }}
         {{- else  }}
            {{- include "dwms.hosts.test" .  | indent 6 }}
         {{- end  }}
      {{- end }}
      containers:
      - name: {{ .Values.name }}
        image: {{ .Values.imagename }}
        volumeMounts:
        - name: app-dump
          mountPath: /dump
        - mountPath: /data/app-logs
          name: app-logs
        {{- if  .Values.name | regexMatch "paysv5" }}
        - name: config-volume
          mountPath: /data/zlnetcer
        {{- end }}    
        env:
        - name: ENV
          value: {{ .Values.namespace }}
        - name: JAVA_OPTS
          {{- if  .Values.name | regexMatch "stmsv5|dcmsv5|omsv5|basicv5" }}
          value: -Xms3g -Xmx5g -Xmn1936m -Xss256k -XX:MaxDirectMemorySize=1G -Ddubbo.protocol.payload=18557050
          {{- else }}
          value: -Xms2g -Xmx4g -Xmn1g -Xss256k -XX:+DisableExplicitGC -Ddubbo.protocol.payload=18557050
          {{- end }}
        {{- if eq .Values.namespace "prod" }}
          {{- include "prod.logs" . | indent 8 }}
        {{- else if eq .Values.namespace "prodv5" }}
          {{- include "prodv5.logs" . | indent 8 }}
        {{- end }}
        {{- if .Values.namespace | regexMatch "prod|prodv5" }}
        resources:
          requests:
            cpu: {{ .Values.cpu | quote }}
            memory: {{ .Values.memory |quote }}
          limits:
            cpu: 4
          {{- if  .Values.name | regexMatch "stmsv5|dcmsv5|omsv5|basicv5|accmsv5" }}
            memory: 8Gi
          {{- else }}
            memory: 5Gi
          {{- end }}
        {{- end }}
        readinessProbe:
          exec:
            command: ["readiness-new.sh"]
          initialDelaySeconds: 6
          periodSeconds: 6
          timeoutSeconds: 5
          failureThreshold: 2
        livenessProbe:
          exec:
            command: ["liveness-new.sh"]
          initialDelaySeconds: 15
          periodSeconds: 18
          failureThreshold: 3
          timeoutSeconds: 15
        startupProbe:
          exec:
            command: ["startup-new.sh"]
          initialDelaySeconds: 15
          periodSeconds: 18
          timeoutSeconds: 15
          failureThreshold: 100
        lifecycle:
          preStop:
            exec:
              {{- if  .Values.name | regexMatch "fpapiv5|entryv5" }}
              command: ["/bin/sh","-c","sleep 600 && curl localhost:40000/offline && sleep 3"]
              {{- else }}
              command: ["/bin/sh","-c","sleep 5 && curl localhost:40000/offline && sleep 3"]
              {{- end  }}
      affinity:
        {{- if  .Values.name | regexMatch "test-admin" }}
        nodeAffinity:
          requiredDuringSchedulingIgnoredDuringExecution:
            nodeSelectorTerms:
            - matchExpressions:
              - key: dynapool
                operator: In
                values:
                - dynamicpool
        {{- else }}
        nodeAffinity:
          preferredDuringSchedulingIgnoredDuringExecution:
          - preference:
              matchExpressions:
              - {key: defpool, operator: In, values: ["defaultpool"]}
            weight: 60
        {{- end }}
        podAntiAffinity:
          preferredDuringSchedulingIgnoredDuringExecution:
          - weight: 80
            podAffinityTerm:
              labelSelector:
                matchExpressions:
                - {key: app, operator: In, values: [{{ .Values.name }}]}
              topologyKey: kubernetes.io/hostname
      volumes:
      - name: app-dump
        persistentVolumeClaim:
          claimName: {{ .Values.namespace }}-data
      - name: app-logs
        emptyDir: {}
      {{- if  .Values.name | regexMatch "paysv5" }}
      - name: config-volume
        configMap:
          name: zlnetcer
      {{- end }}
