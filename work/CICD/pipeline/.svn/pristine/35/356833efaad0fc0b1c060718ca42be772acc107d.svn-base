pipeline {
    agent any	
    stages {
	       stage('PreBuild') {
				steps {
				    script {
                        def get_serviceName = sh(script: '''
                                          echo $SVN_URL |  awk -F '[/]+' '{ print  $NF }'
                                          ''' , returnStdout: true).trim()
                        env.serviceName = get_serviceName
                        def get_ENV = sh(script: '''
                                          echo $JOB_NAME | cut -d- -f2
                                          ''' , returnStdout: true).trim()
                        env.ENV = get_ENV
						def get_MVNENV = sh(script: '''
                                          echo $JOB_NAME | cut -d- -f2 |sed 's/v5//'
                                          ''' , returnStdout: true).trim()
                        env.MVNENV = get_MVNENV
                        def get_CONTEXT = sh(script: '''
                                          echo $JOB_NAME | cut -d- -f2
                                          ''' , returnStdout: true).trim()
                        env.CONTEXT = get_CONTEXT
						def get_BRANCH = sh(script: '''
										  if echo $SVN_URL_2 | grep "trunk" -q;then
											  echo $SVN_URL_2 |  awk -F '[/]+' '{ print  $(NF-2) }'
										  else
										      echo $SVN_URL_2 |  awk -F '[/]+' '{ print  $(NF-1) }' 
										  fi
                                          ''' , returnStdout: true).trim()
                        env.BRANCH = get_BRANCH
                     }
				}
		   }
           stage('Build') {
                steps {
                    sh '''
					env
                    id && pwd
                    mvn -f ${serviceName}-pom/pom.xml clean install package -P ${MVNENV} -Dmaven.test.skip=true
                    '''
                   }
            }
            
            stage ('Make image'){
                steps {
                     sh '''
                         make_image.sh
                         '''
                }
            }
    }
    
    post {
           always {
                             cleanWs()
                    }
       }


}